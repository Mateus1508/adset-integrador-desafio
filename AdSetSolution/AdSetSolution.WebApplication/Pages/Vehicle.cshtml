@page
@model AdSetSolution.WebApplication.Pages.VehicleModel
@{
    ViewData["Title"] = Model.IsEditing ? "Editar Veículo" : "Adicionar Veículo";
}

<h2>@ViewData["Title"]</h2>

@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert alert-info">
        @Model.Message
    </div>
}

<form method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Vehicle.Id" class="form-control" />

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Vehicle.Brand">Marca</label>
                    <input asp-for="Vehicle.Brand" class="form-control" />
                    <span asp-validation-for="Vehicle.Brand" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Vehicle.Model">Modelo</label>
                    <input asp-for="Vehicle.Model" class="form-control" />
                    <span asp-validation-for="Vehicle.Model" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Vehicle.Year">Ano</label>
                    <input asp-for="Vehicle.Year" class="form-control" />
                    <span asp-validation-for="Vehicle.Year" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Vehicle.LicensePlate">Placa</label>
                    <input asp-for="Vehicle.LicensePlate" class="form-control" />
                    <span asp-validation-for="Vehicle.LicensePlate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Vehicle.Mileage">Km</label>
                    <input asp-for="Vehicle.Mileage" class="form-control" />
                    <span asp-validation-for="Vehicle.Mileage" class="text-danger"></span>
                </div>
                <div class="form-group mt-2">
                    <button type="submit" class="btn btn-primary">Salvar</button>
                    <button type="button" onclick="window.location.href='/'" class="btn btn-danger">Cancelar</button>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Vehicle.Color">Cor</label>
                    <input asp-for="Vehicle.Color" class="form-control" />
                    <span asp-validation-for="Vehicle.Color" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Vehicle.Price">Preço</label>
                    <input asp-for="Vehicle.Price" class="form-control" />
                    <span asp-validation-for="Vehicle.Price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Vehicle.OptionalIds">Opcionais</label>
                    <select class="optionalSelect" asp-for="Vehicle.OptionalIds" asp-items="@Model.OptionalItems" multiple="multiple" style="width: 100%;">
                        <option value="0">Todos</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Imagens</label>
                    <div id="image-inputs-container">
                        <div class="image-input-group mb-2">
                            <input type="file" name="VehicleImgs" class="form-control image-input" accept="image/*" onchange="handleFileChange(this)" />
                            <img class="img-preview" src="" alt="Pré-visualização da Imagem" style="display: none;" />
                        </div>
                    </div>
                    <span asp-validation-for="VehicleImgs" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Imagens do veículo</label>
                    <div id="existingImagesContainer">
                        @foreach (var img in Model.ExistingImages)
                        {
                            <div class="existing-image">
                                <img src="@img.ImageBase64" alt="@img.FileName" style="width: 100px; height: 100px;" />
                                <form method="post" asp-page-handler="RemoveImage">
                                    <input type="hidden" name="imageId" value="@img.Id" />
                                    <input type="hidden" name="vehicleId" value="@Model.Vehicle.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Excluir</button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        const maxImages = 15;

        function handleFileChange(input) {
            const container = document.getElementById('image-inputs-container');
            const fileInputs = container.querySelectorAll('.image-input');
            const previews = container.querySelectorAll('.img-preview');

            // Remove existing preview if the input is empty
            if (input.files.length === 0) {
                const index = Array.from(fileInputs).indexOf(input);
                if (index > 0) {
                    container.removeChild(container.children[index]);
                }
                return;
            }

            // Add a new input if the limit is not reached
            if (fileInputs.length < maxImages) {
                const newInputGroup = document.createElement('div');
                newInputGroup.className = 'image-input-group mb-2';

                const newInput = document.createElement('input');
                newInput.type = 'file';
                newInput.name = 'VehicleImgs';
                newInput.className = 'form-control image-input';
                newInput.accept = 'image/*';
                newInput.onchange = (e) => handleFileChange(e.target);

                const newPreview = document.createElement('img');
                newPreview.className = 'img-preview';
                newPreview.src = '';
                newPreview.style.display = 'none'; // Hide by default

                newInputGroup.appendChild(newInput);
                newInputGroup.appendChild(newPreview);

                container.appendChild(newInputGroup);
            }

            // Update the preview for the current input
            updateImagePreview(input);
        }

        function updateImagePreview(input) {
            const preview = input.nextElementSibling;
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    preview.src = e.target.result;
                    preview.style.display = 'block'; // Show the preview
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '';
                preview.style.display = 'none'; // Hide if no file selected
            }
        }

        // Initialize preview for all existing inputs
        document.querySelectorAll('.image-input').forEach(input => {
            input.addEventListener('change', () => updateImagePreview(input));
        });
    </script>
}

<style>
    .image-input-group {
        display: flex;
        align-items: center;
    }

    .image-input {
        flex: 1;
    }

    .img-preview {
        width: 100px;
        height: 100px;
        object-fit: cover;
        margin-left: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        display: none; /* Initially hidden */
    }

    .img-thumbnail {
        max-width: 100px;
        max-height: 100px;
        object-fit: cover;
    }
</style>